add_custom_target(IEGraphicsModuleVulkanShadersRasterizing)
set(IEDefaultVulkanRasterizingShaders
        ${CMAKE_CURRENT_SOURCE_DIR}/fragmentShader.frag
        ${CMAKE_CURRENT_SOURCE_DIR}/vertexShader.vert)
find_program(GLSLC glslc)
if (GLSLC_FOUND)
    file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/bin/shaders/Vulkan/Rasterizing)
    foreach (shader ${IEDefaultVulkanRasterizingShaders})
        if (CMAKE_BUILD_TYPE STREQUAL Release)
            add_custom_command(OUTPUT "${shader}.spv" COMMAND ${GLSLC} --target-env=vulkan1.2 ${shader} -o "${shader}.spv" DEPENDS ${shader} COMMENT "Compiling ${shader} in Release mode.")
        else ()
            add_custom_command(OUTPUT "${shader}.spv" COMMAND ${GLSLC} --target-env=vulkan1.2 ${shader} -o "${shader}.spv" -g DEPENDS ${shader} COMMENT "Compiling ${shader} in Debug mode.")
        endif ()
        target_sources(IEGraphicsModuleVulkanShadersRasterizing PRIVATE "${shader}.spv")
        add_custom_command(TARGET IEGraphicsModuleVulkanShadersRasterizing COMMAND ${CMAKE_COMMAND} -E copy "${shader}.spv" ${CMAKE_BINARY_DIR}/bin/shaders/Vulkan/Rasterizing DEPENDS "${shader}.spv")
        add_custom_command(TARGET IEGraphicsModuleVulkanShadersRasterizing COMMAND ${CMAKE_COMMAND} -E copy "${shader}" ${CMAKE_BINARY_DIR}/bin/shaders/Vulkan/Rasterizing DEPENDS "${shader}")
    endforeach ()
endif ()